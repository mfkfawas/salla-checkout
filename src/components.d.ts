/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { RouterHistory } from "@stencil-community/router";
export namespace Components {
    interface AppCart {
        "history": RouterHistory;
    }
    interface AppCartItem {
        "count": CartItemProps['count'];
        "name": CartItemProps['name'];
        "pic": CartItemProps['pic'];
        "price": CartItemProps['price'];
    }
    interface AppConfirmed {
        "history": RouterHistory;
    }
    interface AppHeader {
    }
    interface AppLayout {
    }
    interface AppRoot {
    }
    interface AppShimmer {
    }
    interface AppShipping {
        "history": RouterHistory;
    }
    interface AppShippingItem {
        "name": ShippingItemProps['name'];
        "onChangeShippingMethod": ShippingItemProps['onChangeShippingMethod'];
        "pic": ShippingItemProps['pic'];
        "price": ShippingItemProps['price'];
        "selectedShippingMethod": ShippingItemProps['selectedShippingMethod'];
    }
}
declare global {
    interface HTMLAppCartElement extends Components.AppCart, HTMLStencilElement {
    }
    var HTMLAppCartElement: {
        prototype: HTMLAppCartElement;
        new (): HTMLAppCartElement;
    };
    interface HTMLAppCartItemElement extends Components.AppCartItem, HTMLStencilElement {
    }
    var HTMLAppCartItemElement: {
        prototype: HTMLAppCartItemElement;
        new (): HTMLAppCartItemElement;
    };
    interface HTMLAppConfirmedElement extends Components.AppConfirmed, HTMLStencilElement {
    }
    var HTMLAppConfirmedElement: {
        prototype: HTMLAppConfirmedElement;
        new (): HTMLAppConfirmedElement;
    };
    interface HTMLAppHeaderElement extends Components.AppHeader, HTMLStencilElement {
    }
    var HTMLAppHeaderElement: {
        prototype: HTMLAppHeaderElement;
        new (): HTMLAppHeaderElement;
    };
    interface HTMLAppLayoutElement extends Components.AppLayout, HTMLStencilElement {
    }
    var HTMLAppLayoutElement: {
        prototype: HTMLAppLayoutElement;
        new (): HTMLAppLayoutElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppShimmerElement extends Components.AppShimmer, HTMLStencilElement {
    }
    var HTMLAppShimmerElement: {
        prototype: HTMLAppShimmerElement;
        new (): HTMLAppShimmerElement;
    };
    interface HTMLAppShippingElement extends Components.AppShipping, HTMLStencilElement {
    }
    var HTMLAppShippingElement: {
        prototype: HTMLAppShippingElement;
        new (): HTMLAppShippingElement;
    };
    interface HTMLAppShippingItemElement extends Components.AppShippingItem, HTMLStencilElement {
    }
    var HTMLAppShippingItemElement: {
        prototype: HTMLAppShippingItemElement;
        new (): HTMLAppShippingItemElement;
    };
    interface HTMLElementTagNameMap {
        "app-cart": HTMLAppCartElement;
        "app-cart-item": HTMLAppCartItemElement;
        "app-confirmed": HTMLAppConfirmedElement;
        "app-header": HTMLAppHeaderElement;
        "app-layout": HTMLAppLayoutElement;
        "app-root": HTMLAppRootElement;
        "app-shimmer": HTMLAppShimmerElement;
        "app-shipping": HTMLAppShippingElement;
        "app-shipping-item": HTMLAppShippingItemElement;
    }
}
declare namespace LocalJSX {
    interface AppCart {
        "history"?: RouterHistory;
    }
    interface AppCartItem {
        "count"?: CartItemProps['count'];
        "name"?: CartItemProps['name'];
        "pic"?: CartItemProps['pic'];
        "price"?: CartItemProps['price'];
    }
    interface AppConfirmed {
        "history"?: RouterHistory;
    }
    interface AppHeader {
    }
    interface AppLayout {
    }
    interface AppRoot {
    }
    interface AppShimmer {
    }
    interface AppShipping {
        "history"?: RouterHistory;
    }
    interface AppShippingItem {
        "name"?: ShippingItemProps['name'];
        "onChangeShippingMethod"?: ShippingItemProps['onChangeShippingMethod'];
        "pic"?: ShippingItemProps['pic'];
        "price"?: ShippingItemProps['price'];
        "selectedShippingMethod"?: ShippingItemProps['selectedShippingMethod'];
    }
    interface IntrinsicElements {
        "app-cart": AppCart;
        "app-cart-item": AppCartItem;
        "app-confirmed": AppConfirmed;
        "app-header": AppHeader;
        "app-layout": AppLayout;
        "app-root": AppRoot;
        "app-shimmer": AppShimmer;
        "app-shipping": AppShipping;
        "app-shipping-item": AppShippingItem;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-cart": LocalJSX.AppCart & JSXBase.HTMLAttributes<HTMLAppCartElement>;
            "app-cart-item": LocalJSX.AppCartItem & JSXBase.HTMLAttributes<HTMLAppCartItemElement>;
            "app-confirmed": LocalJSX.AppConfirmed & JSXBase.HTMLAttributes<HTMLAppConfirmedElement>;
            "app-header": LocalJSX.AppHeader & JSXBase.HTMLAttributes<HTMLAppHeaderElement>;
            "app-layout": LocalJSX.AppLayout & JSXBase.HTMLAttributes<HTMLAppLayoutElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-shimmer": LocalJSX.AppShimmer & JSXBase.HTMLAttributes<HTMLAppShimmerElement>;
            "app-shipping": LocalJSX.AppShipping & JSXBase.HTMLAttributes<HTMLAppShippingElement>;
            "app-shipping-item": LocalJSX.AppShippingItem & JSXBase.HTMLAttributes<HTMLAppShippingItemElement>;
        }
    }
}
